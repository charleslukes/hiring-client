<<<<<<< HEAD
import React, { useState } from "react";
import { useSelector } from "react-redux";

import Card from "../dashboard/Card";

import { Grommet, Grid, ResponsiveContext } from "grommet";
=======
import React, { useState } from 'react';
import { useSelector } from 'react-redux';

import Card from '../dashboard/Card';

import { Grommet, Grid, ResponsiveContext } from 'grommet';
>>>>>>> renamed selected component to be Shortlisted

export default function Shortlisted() {
  const { selectedDecadevs } = useSelector(({ shortlisted }) => shortlisted);
  const shortlistedDevs = Object.values(selectedDecadevs);
  const [state, setState] = useState({
    open: false,
<<<<<<< HEAD
    gender: "All"
=======
    gender: 'All'
>>>>>>> renamed selected component to be Shortlisted
  });

  const onToggle = () => setState({ ...state, open: !state.open });

  return (
    <>
<<<<<<< HEAD
      <Grommet style={{ overflow: "scroll", minHeight: "100%" }}>
=======
      <Grommet style={{ overflow: 'scroll', minHeight: '100%' }}>
>>>>>>> renamed selected component to be Shortlisted
        <ResponsiveContext.Consumer>
          {size => (
            <Grid
              columns={
<<<<<<< HEAD
                size === "small"
                  ? ["1"]
                  : size === "medium"
                  ? ["1/4", "1/4", "1/4", "1/4"]
                  : size === "large"
                  ? ["1/4", "1/4", "1/4", "1/4"]
                  : size === "xlarge"
                  ? ["1/5", "1/5", "1/5", "1/5", "1/5"]
                  : ["1/6", "1/6", "1/6", "1/6", "1/6", "1/6"]
=======
                size === 'small'
                  ? ['1']
                  : size === 'medium'
                  ? ['1/2', '1/2']
                  : size === 'large'
                  ? ['1/4', '1/4', '1/4', '1/4']
                  : size === 'xlarge'
                  ? ['1/5', '1/5', '1/5', '1/5', '1/5']
                  : ['1/6', '1/6', '1/6', '1/6', '1/6', '1/6']
>>>>>>> renamed selected component to be Shortlisted
              }
            >
              {shortlistedDevs.map((dev, key) => (
                <Card
                  key={key}
                  dev={dev}
                  open={state.open}
                  onToggle={onToggle}
                />
              ))}
            </Grid>
          )}
        </ResponsiveContext.Consumer>
      </Grommet>
    </>
  );
}
